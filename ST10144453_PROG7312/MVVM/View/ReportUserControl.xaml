<UserControl
    x:Class="ST10144453_PROG7312.MVVM.View.ReportUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:ST10144453_PROG7312.FrontendLogic"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ST10144453_PROG7312.MVVM.View_Model"
    d:DesignHeight="1080"
    d:DesignWidth="1710"
    AllowDrop="True"
    Background="Transparent"
    DragEnter="OnMediaDragEnter"
    DragLeave="OnMediaDragLeave"
    Drop="OnMediaDrop"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--  Merging external resource dictionaries  -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ST10144453_PROG7312;component/ResourceDictionaries/ComboBoxStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid>
                                <!--  Background of the progress bar (transparent)  -->
                                <Border
                                    Height="20"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="15">
                                    <Border
                                        Margin="2"
                                        Background="#E0E0E0"
                                        CornerRadius="15" />
                                </Border>
                                <!--  Foreground of the progress bar (curved)  -->
                                <Border
                                    Margin="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Foreground}"
                                    CornerRadius="15">
                                    <Border
                                        Width="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding Foreground}"
                                        CornerRadius="15" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Define a style for TextBox  -->
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="15" />
                <Setter Property="FontFamily" Value="pack://application:,,,/ST10144453_PROG7312;component/Resources/Fonts/Roboto-Regular.ttf#Roboto" />
                <Setter Property="Foreground" Value="#8B8B8B" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="4"
                            Opacity="0.3"
                            ShadowDepth="2" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ErrorTextBoxStyle" TargetType="TextBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsIssueNameFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsLocationFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDescriptionFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--  Style for ComboBox when validation fails  -->
            <Style x:Key="ErrorComboBoxStyle" TargetType="ComboBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsCategorySelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--  Style for error message  -->
            <Style x:Key="ErrorTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsIssueNameFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Issue Name is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsLocationFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Location is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDescriptionFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Description is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsCategorySelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Category is required." />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Left Column - Input Fields  -->
        <StackPanel Grid.Column="0" Margin="0,0,10,0">

            <!--  Issue Name Label and TextBox  -->
            <Label Content="Issue Name:" />
            <TextBox
                x:Name="IssueNameTextBox"
                MinWidth="200"
                MinHeight="30"
                Margin="0,5,0,10"
                Text="{Binding IssueName, Mode=TwoWay}"
                TextChanged="OnIssueNameTextChanged"
                ToolTip="Enter the name of the issue here." />

            <!--  Location Label and TextBox  -->
            <Label Content="Location:" />
            <TextBox
                x:Name="LocationTextBox"
                MinWidth="200"
                MinHeight="30"
                Margin="0,5,0,10"
                Text="{Binding Location, Mode=TwoWay}"
                TextChanged="OnLocationTextChanged"
                ToolTip="Specify the location related to the issue." />

            <!--  Category Label and ComboBox  -->
            <Label Content="Category:" />
            <ComboBox
                x:Name="CategoryComboBox"
                MinWidth="200"
                MinHeight="30"
                Margin="0,5,0,10"
                ItemsSource="{Binding Categories}"
                SelectedItem="{Binding SelectedCategory, Mode=TwoWay}"
                SelectionChanged="OnCategorySelectionChanged"
                ToolTip="Select the category that best describes the issue." />

            <!--  Description Label and TextBox  -->
            <Label Content="Description:" />
            <TextBox
                x:Name="DescriptionTextBox"
                MinWidth="200"
                MinHeight="100"
                Margin="0,5,0,10"
                AcceptsReturn="True"
                Text="{Binding Description, Mode=TwoWay}"
                TextChanged="OnDescriptionTextChanged"
                ToolTip="Provide a detailed description of the issue here." />

            <!--  Submit Button  -->
            <Button
                x:Name="SubmitButton"
                Height="50"
                MinWidth="200"
                Margin="200,5,200,10"
                Command="{Binding SubmitCommand}"
                Content="Submit"
                FontSize="16"
                FontWeight="Bold">
                <Button.Style>
                    <Style TargetType="Button">
                        <!--  Base style  -->
                        <Setter Property="Background" Value="#007646" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="10,5" />
                        <Setter Property="FontSize" Value="16" />

                        <!--  ControlTemplate  -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="20">
                                        <!--  Apply CornerRadius directly here  -->
                                        <ContentPresenter
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            TextElement.FontSize="{TemplateBinding FontSize}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <!--  Triggers for visual states  -->
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00965a" />
                                <!--  Darker shade for hover  -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#005b35" />
                                <!--  Even darker shade for click  -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <!--  Right Column - Media Upload  -->
        <StackPanel Grid.Column="1" Margin="10,0,0,0">
            <!--  Drag and Drop Area  -->
            <Border
                Height="300"
                Margin="0,0,0,20"
                AllowDrop="True"
                BorderBrush="#2C2F80"
                BorderThickness="2"
                CornerRadius="10"
                DragEnter="OnMediaDragEnter"
                DragLeave="OnMediaDragLeave"
                Drop="OnMediaDrop">
                <Grid>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="18"
                        Foreground="#2C2F80"
                        Text="Drag and drop media files here" />
                    <ItemsControl ItemsSource="{Binding UploadedFiles}">
                        <!--  Add ItemTemplate for displaying uploaded files  -->
                    </ItemsControl>
                </Grid>
            </Border>

            <!--  Attach Media Button  -->
            <Button
                x:Name="AttachMediaButton"
                Grid.Row="9"
                Height="50"
                MinWidth="200"
                Margin="300,5,300,10"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Command="{Binding AttachMediaCommand}"
                Content="Attach Media"
                FontSize="16"
                FontWeight="Bold">
                <Button.Style>
                    <Style TargetType="Button">
                        <!--  Base style  -->
                        <Setter Property="Background" Value="#2C2F80" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="10,5" />
                        <Setter Property="FontSize" Value="16" />

                        <!--  ControlTemplate  -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="20">
                                        <!--  Apply CornerRadius directly here  -->
                                        <ContentPresenter
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            TextElement.FontSize="{TemplateBinding FontSize}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <!--  Triggers for visual states  -->
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3a4d92" />
                                <!--  Darker shade for hover  -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1a2e6e" />
                                <!--  Even darker shade for click  -->
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>