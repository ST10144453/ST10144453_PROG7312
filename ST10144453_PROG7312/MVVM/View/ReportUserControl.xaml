<UserControl
    x:Class="ST10144453_PROG7312.MVVM.View.ReportUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:ST10144453_PROG7312.FrontendLogic"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ST10144453_PROG7312.MVVM.View_Model"
    d:DesignHeight="1080"
    d:DesignWidth="1710"
    Background="Transparent"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModel:ReportViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <!--  Merging external resource dictionaries  -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ST10144453_PROG7312;component/ResourceDictionaries/ComboBoxStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid>
                                <!--  Background of the progress bar (transparent)  -->
                                <Border
                                    Height="20"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="15">
                                    <Border
                                        Margin="2"
                                        Background="#E0E0E0"
                                        CornerRadius="15" />
                                </Border>
                                <!--  Foreground of the progress bar (curved)  -->
                                <Border
                                    Margin="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Foreground}"
                                    CornerRadius="15">
                                    <Border
                                        Width="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding Foreground}"
                                        CornerRadius="15" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Define a style for TextBox  -->
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="15" />
                <Setter Property="FontFamily" Value="pack://application:,,,/ST10144453_PROG7312;component/Resources/Fonts/Roboto-Regular.ttf#Roboto" />
                <Setter Property="Foreground" Value="#8B8B8B" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect
                            BlurRadius="4"
                            Opacity="0.3"
                            ShadowDepth="2" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ErrorTextBoxStyle" TargetType="TextBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsIssueNameFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsLocationFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDescriptionFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Style for ComboBox when validation fails -->
            <Style x:Key="ErrorComboBoxStyle" TargetType="ComboBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsCategorySelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="BorderBrush" Value="Red" />
                        <Setter Property="BorderThickness" Value="2" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Style for error message -->
            <Style x:Key="ErrorTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Visibility" Value="Collapsed" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsIssueNameFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Issue Name is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsLocationFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Location is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsDescriptionFilled, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Description is required." />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsCategorySelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Text" Value="Category is required." />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">
        <!--  Define row and column definitions for layout  -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--  For ProgressBar  -->
            <RowDefinition Height="Auto" />
            <!--  For Issue Name Label  -->
            <RowDefinition Height="Auto" />
            <!--  For Issue Name TextBox  -->
            <RowDefinition Height="Auto" />
            <!--  For Location Label  -->
            <RowDefinition Height="Auto" />
            <!--  For Location TextBox  -->
            <RowDefinition Height="Auto" />
            <!--  For Category Label  -->
            <RowDefinition Height="Auto" />
            <!--  For Category ComboBox  -->
            <RowDefinition Height="Auto" />
            <!--  For Description Label  -->
            <RowDefinition Height="Auto" />
            <!--  For Description TextBox  -->
            <RowDefinition Height="Auto" />
            <!--  For Media Attachment Button  -->
            <RowDefinition Height="Auto" />
            <!--  For Submit Button  -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Progress Bar  -->
        <ProgressBar
    x:Name="progressBar"
    Minimum="0"
    Maximum="100"
    Value="{Binding Progress}"
    Height="20"
    Background="Transparent"
    BorderBrush="Transparent">
            <ProgressBar.Template>
                <ControlTemplate TargetType="ProgressBar">
                    <Border
                Background="LightGray"
                BorderThickness="0"
                CornerRadius="10">
                        <Border
                    x:Name="PART_Track"
                    Background="Transparent"
                    BorderThickness="0"
                    CornerRadius="10">
                            <Border
                        x:Name="PART_Indicator"
                        Height="20"
                        CornerRadius="10">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <!-- Define gradient stops here -->
                                        <GradientStop Color="#007A33" Offset="0.0" />
                                        <!-- Green -->
                                        <GradientStop Color="#FFD100" Offset="0.25" />
                                        <!-- Yellow -->
                                        <GradientStop Color="#D92B22" Offset="0.5" />
                                        <!-- Black -->
                                        <GradientStop Color="#2C2F80" Offset="0.75" />
                                        <!-- Red -->
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </ProgressBar.Template>
        </ProgressBar>

        <!--  Issue Name Label and TextBox  -->
        <Label Grid.Row="1" Content="Issue Name:" />
        <TextBox
            x:Name="IssueNameTextBox"
            Grid.Row="2"
            MinWidth="200"
            MinHeight="30"
            Margin="0,5,0,10"
            Text="{Binding IssueName, Mode=TwoWay}"
            TextChanged="OnIssueNameTextChanged"
            ToolTip="Enter the name of the issue here." />

        <!--  Location Label and TextBox  -->
        <Label Grid.Row="3" Content="Location:" />
        <TextBox
            x:Name="LocationTextBox"
            Grid.Row="4"
            MinWidth="200"
            MinHeight="30"
            Margin="0,5,0,10"
            Text="{Binding Location, Mode=TwoWay}"
            TextChanged="OnLocationTextChanged"
            ToolTip="Specify the location related to the issue." />

        <!--  Category Label and ComboBox  -->
        <Label Grid.Row="5" Content="Category:" />
        <ComboBox
            x:Name="CategoryComboBox"
            Grid.Row="6"
            MinWidth="200"
            MinHeight="30"
            Margin="0,5,0,10"
            ItemsSource="{Binding Categories}"
            SelectedItem="{Binding SelectedCategory, Mode=TwoWay}"
            SelectionChanged="OnCategorySelectionChanged"
            ToolTip="Select the category that best describes the issue." />

        <!--  Description Label and TextBox  -->
        <Label Grid.Row="7" Content="Description:" />
        <TextBox
            x:Name="DescriptionTextBox"
            Grid.Row="8"
            MinWidth="200"
            MinHeight="100"
            Margin="0,5,0,10"
            AcceptsReturn="True"
            Text="{Binding Description, Mode=TwoWay}"
            TextChanged="OnDescriptionTextChanged"
            ToolTip="Provide a detailed description of the issue here." />

        <!--  Attach Media Button  -->
        <Button
            x:Name="AttachMediaButton"
            Grid.Row="9"
            Height="50"
            MinWidth="200"
            Margin="300,5,300,10"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Command="{Binding AttachMediaCommand}"
            Content="Attach Media"
            FontSize="16"
            FontWeight="Bold">
            <Button.Style>
                <Style TargetType="Button">
                    <!--  Base style  -->
                    <Setter Property="Background" Value="#2C2F80" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Padding" Value="10,5" />
                    <Setter Property="FontSize" Value="16" />

                    <!--  ControlTemplate  -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="20">
                                    <!--  Apply CornerRadius directly here  -->
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        TextElement.FontSize="{TemplateBinding FontSize}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Triggers for visual states  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3a4d92" />
                            <!--  Darker shade for hover  -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#1a2e6e" />
                            <!--  Even darker shade for click  -->
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--  Submit Button  -->
        <Button
            x:Name="SubmitButton"
            Grid.Row="10"
            Height="50"
            MinWidth="200"
            Margin="200,5,200,10"
            Command="{Binding SubmitCommand}"
            Content="Submit"
            FontSize="16"
            FontWeight="Bold">
            <Button.Style>
                <Style TargetType="Button">
                    <!--  Base style  -->
                    <Setter Property="Background" Value="#007646" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Padding" Value="10,5" />
                    <Setter Property="FontSize" Value="16" />

                    <!--  ControlTemplate  -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="20">
                                    <!--  Apply CornerRadius directly here  -->
                                    <ContentPresenter
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        TextElement.FontSize="{TemplateBinding FontSize}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!--  Triggers for visual states  -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#00965a" />
                            <!--  Darker shade for hover  -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#005b35" />
                            <!--  Even darker shade for click  -->
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>