<UserControl
    x:Class="ST10144453_PROG7312.MVVM.View.LoginUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="clr-namespace:ST10144453_PROG7312.FrontendLogic"
    xmlns:local="clr-namespace:ST10144453_PROG7312.MVVM.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:ST10144453_PROG7312.MVVM.View_Model"
    d:DesignHeight="1080"
    d:DesignWidth="1710"
    Background="Transparent"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModel:LoginRegisterViewModel />
    </UserControl.DataContext>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--  Define unique styles for TextBox elements  -->
        <Style x:Key="RegisterTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        BlurRadius="3"
                        Opacity="0.2"
                        ShadowDepth="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Define similar styles for PasswordBox elements  -->
        <Style x:Key="RegisterPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        BlurRadius="3"
                        Opacity="0.2"
                        ShadowDepth="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="20">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Base Button Style  -->
        <Style x:Key="ImageButtonStyle" TargetType="Button">
            <!--  Default Button Properties  -->
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/BigBtn/bigBtnDefault.png" Stretch="Uniform" />
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <!--  Adjust Padding for space inside the button  -->
            <Setter Property="Padding" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <!--  Button Size (Adjust accordingly)  -->
            <Setter Property="Height" Value="80" />
            <Setter Property="Width" Value="607" />
            <!--  Remove the Viewbox to prevent content scaling issues  -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                TextElement.FontSize="24" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--  Hover and Pressed State Triggers  -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/BigBtn/bigBtnHover.png" Stretch="Uniform" />
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/BigBtn/bigBtnClick.png" Stretch="Uniform" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Style for Button 4 (Different Design and Slimmer)  -->
        <Style
            x:Key="Button4Style"
            BasedOn="{StaticResource ImageButtonStyle}"
            TargetType="Button">
            <!--  Override the Default Background  -->
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/QuitBtn/quitBrnDefault.png" Stretch="Uniform" />
                </Setter.Value>
            </Setter>
            <!--  Override the Foreground to make the text white  -->
            <Setter Property="Foreground" Value="White" />
            <!--  Override the Hover Background  -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/QuitBtn/quitBtnHover.png" Stretch="Uniform" />
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <!--  Override the Pressed Background  -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="pack://application:,,,/Resources/Images/HomePage/Buttons/QuitBtn/quitBtnClick.png" Stretch="Uniform" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DropShadowEffect
            x:Key="DropShadowEffect"
            BlurRadius="15"
            Direction="315"
            Opacity="0.2"
            ShadowDepth="10"
            Color="Black" />

        <!--  Add a new style for animated border  -->
        <Style x:Key="AnimatedBorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="#007A5E" />
                        <GradientStop Offset="0.5" Color="#FFCE00" />
                        <GradientStop Offset="1" Color="#DE3831" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <PointAnimation
                                Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)"
                                From="0,0"
                                To="1,1"
                                Duration="0:0:3" />
                            <PointAnimation
                                Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)"
                                From="1,1"
                                To="0,0"
                                Duration="0:0:3" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Viewbox Stretch="Uniform" StretchDirection="DownOnly">
            <Grid Width="1910" Height="1080">
                <!--  Background with gradient  -->


                <!--  Main Content  -->
                <Border
                    Width="1200"
                    Height="800"
                    CornerRadius="30"
                    Effect="{StaticResource DropShadowEffect}"
                    Style="{StaticResource AnimatedBorderStyle}">
                    <Border.Background>
                        <SolidColorBrush Opacity="0.8" Color="White" />
                    </Border.Background>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Button
                            Width="40"
                            Height="auto"
                            Margin="20,30,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Click="BackButton_Click"
                            Cursor="Hand"
                            Style="{StaticResource ImageButtonStyle}">
                            <Image Source="pack://application:,,,/Resources/Icons/icon_back.png" />
                        </Button>


                        <!--  Left Column  -->
                        <StackPanel
                            Grid.Column="0"
                            Margin="50,30,25,30"
                            VerticalAlignment="Center">


                            <TextBlock
                                Margin="0,0,0,10"
                                FontFamily="Roboto"
                                FontSize="28"
                                Foreground="#4d4d4d"
                                Text="Let's get to know each other!"
                                TextAlignment="Center" />
                            <TextBlock
                                Margin="0,0,0,20"
                                FontFamily="Inter"
                                FontSize="40"
                                FontWeight="Bold"
                                Foreground="#2c2c2c"
                                Text="Create your Account"
                                TextAlignment="Center" />

                        </StackPanel>

                        <!--  Right Column  -->
                        <StackPanel
                            Grid.Column="1"
                            Margin="25,30,50,30"
                            VerticalAlignment="Center">
                            <StackPanel Margin="0,0,0,20">
                                <TextBlock
                                    Margin="0,0,0,5"
                                    FontSize="18"
                                    FontWeight="DemiBold"
                                    Foreground="#4d4d4d"
                                    Text="Username/Email" />
                                <TextBox
                                    Height="50"
                                    FontFamily="Roboto"
                                    Foreground="#2e2e2e"
                                    Style="{StaticResource RegisterTextBoxStyle}"
                                    Text="{Binding LoginUserNameOrEmail, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>


                            <StackPanel Margin="0,0,0,20">
                                <TextBlock
                                    Margin="0,0,0,5"
                                    FontSize="18"
                                    FontWeight="DemiBold"
                                    Foreground="#4d4d4d"
                                    Text="Password" />
                                <Grid>
                                    <PasswordBox
                                        x:Name="PasswordBox"
                                        Height="50"
                                        helper:PasswordBoxHelper.BindPassword="True"
                                        helper:PasswordBoxHelper.BoundPassword="{Binding LoginPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        FontFamily="Roboto"
                                        Foreground="#2e2e2e"
                                        Style="{StaticResource RegisterPasswordBoxStyle}" />
                                    <TextBox
                                        x:Name="PlainTextPasswordBox"
                                        Height="50"
                                        FontFamily="Roboto"
                                        Foreground="#2e2e2e"
                                        Style="{StaticResource RegisterTextBoxStyle}"
                                        Visibility="Collapsed" />
                                    <ToggleButton
                                        x:Name="TogglePasswordVisibility"
                                        Width="30"
                                        Height="30"
                                        Margin="0,0,20,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Click="TogglePasswordVisibility_Click">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Grid>
                                                            <Image HorizontalAlignment="Left" Source="pack://application:,,,/Resources/Icons/icon_see.png" />
                                                        </Grid>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <Grid>
                                                                    <Image HorizontalAlignment="Left" Source="pack://application:,,,/Resources/Icons/icon_nosee.png" />
                                                                </Grid>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                            </StackPanel>

                            <Button
                                Width="300"
                                Height="60"
                                Click="Login_Click"
                                Command="{Binding LoginCommand}"
                                Content="Login"
                                FontSize="22"
                                Style="{StaticResource Button4Style}" />
                            <TextBlock
                                Margin="5,2,0,0"
                                FontSize="12"
                                Foreground="Red"
                                Text="{Binding LoginError}"
                                Visibility="{Binding ShowLoginError, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Viewbox>
    </Grid>
</UserControl>
